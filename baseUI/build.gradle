plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id "androidx.navigation.safeargs.kotlin"
    id 'kotlin-parcelize'
}

apply from: '../dependencies.gradle'

android {
    compileSdkVersion compSdkVersion

    defaultConfig {
        minSdkVersion mSdkVersion
        targetSdkVersion tarSdkVersion
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
        freeCompilerArgs += [
                "-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi",
        ]
    }

    buildFeatures {
        viewBinding true
    }

    kapt {
        arguments {
            arg("dagger.fastInit", "enabled")
        }
    }
}

dependencies {
    implementation core_ktx
    kapt kotlinx_metadata
    coreLibraryDesugaring desugaring

    testImplementation junit
    androidTestImplementation android_test

    // android
    implementation appcompat
    implementation material
    implementation constraintlayout
    implementation fragment_ktx
    implementation viewpager2
    implementation swiperefreshlayout
    implementation recyclerview

    // viewModel and liveData
    implementation lifecycle_runtime_ktx
    implementation lifecycle_common_java8
    implementation lifecycle_viewmodel_ktx
    //noinspection LifecycleAnnotationProcessorWithJava8
    kapt lifecycle_compiler
    implementation lifecycle_process
    implementation lifecycle_extensions

    // dagger 2
    implementation dagger
    implementation dagger_android
    implementation dagger_android_support
    kapt dagger_android_processor
    kapt dagger_compiler

    // navigation
    implementation navigation_fragment_ktx
    implementation navigation_ui_ktx

    // permissions
    implementation kpermissions
    implementation kpermissionsCoroutines

    implementation glide_core
    kapt glide_kapt

    implementation kiel
}